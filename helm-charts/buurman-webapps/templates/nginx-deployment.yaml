{{- if .Values.nginx.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nginx.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    environment: {{ .Values.environment }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: nginx
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: nginx
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: nginx
        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.nginx.service.port }}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          {{- toYaml .Values.nginx.resources | nindent 10 }}
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Values.namespace }}
  labels:
    app: nginx
    release: {{ .Release.Name }}
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        upstream apache_backend {
            server {{ .Values.apacheApp1.name }}-service:{{ .Values.apacheApp1.service.port }};
            server {{ .Values.apacheApp2.name }}-service:{{ .Values.apacheApp2.service.port }};
        }
        server {
            listen {{ .Values.nginx.service.port }};
            location / {
                proxy_pass http://apache_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
    }
{{- end }}
